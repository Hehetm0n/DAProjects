# -*- coding: utf-8 -*-
"""Stock_Market_Analysis.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1l6OCYDEL4YB89_L0BiDEWqv9tXtfWgzG

Importing libraries
"""

import pandas as pd
import yfinance as yf
import datetime
import plotly.graph_objects as go
import plotly.express as px
from datetime import date, timedelta

today = date.today()

d1= today.strftime("%Y-%m-%d")
end_date = d1

d2 = date.today() - timedelta(days=365)
d2 = d2.strftime("%Y-%m-%d")
start_date = d2

data = yf.download('GOOG', start = start_date, end= end_date, progress = False)

data["Date"] = data.index
data = data[["Date", "Open", "High", "Low", "Close", "Adj Close", "Volume"]]
data.reset_index(drop=True, inplace=True)
print(data.head())

"""Candle stick chart"""

figure = go.Figure(data=[go.Candlestick(x=data["Date"], open = data["Open"], high = data["High"],
                                        low = data["Low"], close = data["Close"])])

figure.update_layout(title = "Google Stock Price Analysis", xaxis_rangeslider_visible = False)
figure.show()

figure = px.bar(data, x = "Date", y = "Close")
figure.show()

"""add a range-slider to analyze the stock market."""

figure = px.line(data, x = 'Date', y = 'Close',
                 title = 'Stock Market Analysis with Rangeslider')
figure.update_xaxes(rangeslider_visible = True)
figure.show()

"""Time period selectors are like buttons that show you the graph of a specific time period"""

figure = px.line(data, x = 'Date', y = 'Close',
                 title = 'Stock Market Analysis with Time Period Selectors')

figure.update_xaxes(
    rangeselector=dict(
        buttons=list([
            dict(count=1, label = "1m", step="month", stepmode="backward"),
            dict(count=3, label = "3m", step="month", stepmode="backward"),
            dict(count=6, label = "6m", step="month", stepmode="backward"),
            dict(count=1, label = "1y", step="year", stepmode="backward"),
            dict(step="all")
        ])
    )
)

figure.show()

"""remove all the records of the weekend trends from your stock market visualization"""

figure = px.scatter(data, x='Date', y='Close', range_x=['2022-07-25', '2023-07-24'],
          title = "Stock Market Analysis by hiding weekends gaps")

figure.update_xaxes(
    rangebreaks=[dict(bounds=["sat", "sun"])]
)

figure.show()